@import "../../styles/states";
@import "../../styles/global-css-settings";
@import "../../styles/theme-mixin";

.l3-style-toggle {
  // Since it is not possible to change the design of the checkbox according to the storybook toggle requirements using css,
  // we hide the checkbox and draw a new one instead.
  // In order to allow accessibility, all operations will be performed on the hidden checkbox and be reflected
  // in the new toggle we drew.
  &_input {
    // When the hidden checkbox will be focused by keyboard navigation events, the toggle appearance will reflect it
    &:focus-visible,
    &.focus-visible {
      & ~ .l3-style-toggle_toggle {
        @include focus-style-css();
      }
    }
  }

  &_toggle {
    @include reset-button();
    transition: background-color var(--motion-productive-medium) var(--motion-timing-transition);
    margin: 0 $spacing-small;
    position: relative;
    width: $border-radius-big;
    height: 30px;
    cursor: pointer;
    border-radius: 100px !important;
    // background: rgba(0, 0, 0, 0.2);
    // background: linear-gradient(180deg, #cefb53 0%, #7af94b 100%);
    // border-radius: 100px;

    &::after {
      @include theme-prop(background-color, toggle-color);
      // background-color: red;
      content: " ";
      position: absolute;
      width: 26px;
      height: 26px;
      border-radius: 50%;
      // top: calc(50% - 18px / 2);
      left: calc(50% - 26px / 2 - 15px);
      top: calc(50% - 26px / 2);
      transition: left var(--motion-productive-medium) var(--motion-timing-transition);
    }

    &--selected {
      // @include theme-prop(background-color, toggle-selected-primary-bg-color);
      background: $linear-gradient-green;
      box-shadow: $toggle-selected-box-shadow;
      &::after {
        left: $spacing-xl;
      }
    }

    &--not-selected {
      @include theme-prop(background-color, toggle-primary-bg-color);
      // background: $black-2;
      box-shadow: $toggle-not-selected-box-shadow;
      &::after {
        left: 3px;
      }
    }
  }

  &_text {
    @include theme-prop(color, primary-text-color);
    font-style: normal;
    font-weight: normal;
    size: 14px;
    line-height: 22px;
  }

  &_size_small {
    & .l3-style-toggle_toggle {
      width: $spacing-xl;
      height: $spacing-medium;
      &::after {
        width: 13.87px;
        height: 13.87px;
        left: calc(50% - 13.87px / 2 + 8px);
        top: calc(50% - 13.87px / 2 - 0px);
      }
      &--selected {
        box-shadow: $toggle-small-selected-box-shadow;
        &::after {
          left: 17px;
        }
      }
      &--not-selected {
        box-shadow: $toggle-small-not-selected-box-shadow;
        &::after {
          left: 2px;
        }
      }
    }
    & .l3-style-toggle_text {
      font-size: $spacing-small-medium;
      line-height: $spacing-medium;
    }
  }

  &_kind_secondary {
    & .l3-style-toggle_toggle {
      &--not-selected {
        @include theme-prop(background-color, toggle-not-selected-secondary-bg-color);
        // background: $white-2;
      }
    }
  }

  &_kind_tertiary {
    & .l3-style-toggle_toggle {
      &--selected {
        background: $linear-gradient-blue;
        // background-image: url("/src/components/Avatar/__stories__/assets/femaleIcon.png");
      }
    }
  }

  &_wrapper {
    display: flex;
    align-items: center;
    &--disabled {
      & .l3-style-toggle_toggle {
        opacity: var(--disabled-component-opacity);
        @include theme-prop(background-color, toggle-disabled-bg-color);
        cursor: not-allowed;
      }
      & .l3-style-toggle_text {
        color: var(--disabled-text-color);
      }
    }
  }
}
